{"version":3,"file":"js/UnScramble_bundle.js","mappings":"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","sources":["webpack://dawg-unscramble/./src/js/BinFileReader.js","webpack://dawg-unscramble/webpack/bootstrap","webpack://dawg-unscramble/webpack/runtime/define property getters","webpack://dawg-unscramble/webpack/runtime/hasOwnProperty shorthand","webpack://dawg-unscramble/webpack/runtime/make namespace object","webpack://dawg-unscramble/./src/js/Unscramble.js"],"sourcesContent":["/**\n * BinFileReader.js\n * You can find more about this function at\n * http://nagoon97.com/reading-binary-files-using-ajax/\n *\n * Copyright (c) 2008 Andy G.P. Na <nagoon97@naver.com>\n * The source code is freely distributable under the terms of an MIT-style license. \n */\n\nexport function BinFileReader( fileURL )\n{\n   var _exception = {};\n   _exception.FileLoadFailed = 1;\n   _exception.EOFReached = 2;\n\n   var filePointer = 0;\n   var fileSize = -1;\n   var fileContents;\n\n   this.getFileSize = function()\n   {\n      return fileSize;\n   }\n\n   this.getFilePointer = function()\n   {\n      return filePointer;\n   }\n\n   this.movePointerTo = function( iTo )\n   {\n      if ( iTo < 0 )\n         filePointer = 0;\n      else if ( iTo > this.getFileSize( ) )\n         throwException(_exception.EOFReached, \"Failed to load file. Check the logs. EOF reached. iTo: \" + iTo + \" fileSize: \" + this.getFileSize( ) );\n      else\n         filePointer = iTo;\n\n      return filePointer;\n   };\n\n   this.movePointer = function( iDirection )\n   {\n      this.movePointerTo( filePointer + iDirection );\n\n      return filePointer;\n   };\n\n   this.readNumber = function( iNumBytes, iFrom )\n   {\n      iNumBytes = iNumBytes || 1;\n      iFrom = iFrom || filePointer;\n\n      this.movePointerTo( iFrom + iNumBytes );\n\n      let result = 0;\n      for( let i=iFrom + iNumBytes; i>iFrom; i-- )\n      {\n         result = result * 256 + this.readByteAt( i-1 );\n      }\n\n      return result;\n   };\n\n   this.readString = function( iNumChars, iFrom )\n   {\n      iNumChars = iNumChars || 1;\n      iFrom = iFrom || filePointer;\n\n      this.movePointerTo( iFrom );\n\n      let result = \"\";\n      let tmpTo = iFrom + iNumChars;\n      for( let i=iFrom; i<tmpTo; i++ )\n      {\n         result += String.fromCharCode( this.readNumber( 1 ) );\n      }\n\n      return result;\n   };\n\n   this.readUnicodeString = function( iNumChars, iFrom )\n   {\n      iNumChars = iNumChars || 1;\n      iFrom = iFrom || filePointer;\n\n      this.movePointerTo(iFrom);\n\n      let result = \"\";\n      let tmpTo = iFrom + iNumChars*2;\n      for( let i=iFrom; i<tmpTo; i+=2 )\n      {\n         result += String.fromCharCode( this.readNumber( 2 ) );\n      }\n\n      return result;\n   };\n\n   function throwException( errorCode, reason )\n   {\n      switch(errorCode)\n      {\n         case _exception.FileLoadFailed:\n            alert( reason );\n            throw new Error('Error: Failed to load');\n         case _exception.EOFReached:\n            alert( reason );\n            throw new Error(\"Error: EOF reached\");\n      }\n   }\n\n   function BinFileReaderImpl_IE( fileURL )\n   {\n      var vbArr = BinFileReaderImpl_IE_VBAjaxLoader( fileURL );\n      fileContents = vbArr.toArray();\n\n      fileSize = fileContents.length-1;\n\n      if (fileSize < 0)\n         throwException(_exception.FileLoadFailed, \"Failed to load: \" + fileURL + \" Check the logs. file size: \" + fileSize );\n\n      this.readByteAt = function( i )\n      {\n         return fileContents[ i ];\n      }\n   }\n\n   function BinFileReaderImpl( fileURL )\n   {\n      var req = new XMLHttpRequest();\n\n      // asynchronous = false\n      req.open( 'GET', fileURL, false );\n\n      //XHR binary charset opt by Marcus Granado 2006 [http://mgran.blogspot.com] \n      req.overrideMimeType('text/plain; charset=x-user-defined');\n      req.send(null);\n\n      if ( req.status != 200 )\n      {\n         throwException(_exception.FileLoadFailed, \"Failed to load: \" + fileURL + \" Check the logs. Status: \" + req.status );\n      }\n\n      fileContents = req.responseText;\n\n      fileSize = fileContents.length;\n\n      this.readByteAt = function( i )\n      {\n         return fileContents.charCodeAt(i) & 0xff;\n      }\n   }\n   if (/msie/i.test(navigator.userAgent) && !/opera/i.test(navigator.userAgent) )\n      BinFileReaderImpl_IE.apply(this, [ fileURL ]);\n   else\n      BinFileReaderImpl.apply(this, [ fileURL ]);\n}\n\ndocument.write('<script type=\"text/vbscript\">\\n\\\nFunction BinFileReaderImpl_IE_VBAjaxLoader( fileName )\\n\\\n   Dim xhr\\n\\\n   Set xhr = CreateObject(\"Microsoft.XMLHTTP\")\\n\\\n\\n\\\n   xhr.Open \"GET\", fileName, False\\n\\\n\\n\\\n   xhr.setRequestHeader \"Accept-Charset\", \"x-user-defined\"\\n\\\n   xhr.send\\n\\\n\\n\\\n   Dim byteArray()\\n\\\n\\n\\\n   if xhr.Status = 200 Then\\n\\\n      Dim byteString\\n\\\n      Dim i\\n\\\n\\n\\\n      byteString=xhr.responseBody\\n\\\n\\n\\\n      ReDim byteArray(LenB(byteString))\\n\\\n\\n\\\n      For i = 1 To LenB(byteString)\\n\\\n         byteArray(i-1) = AscB(MidB(byteString, i, 1))\\n\\\n      Next\\n\\\n   End If\\n\\\n\\n\\\n   BinFileReaderImpl_IE_VBAjaxLoader=byteArray\\n\\\nEnd Function\\n\\\n</script>');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { BinFileReader } from \"./BinFileReader\"\n(function()\n{\n\n   var _OBJECT_ROOT_ = window;\n\n\n   // BEGIN Namespace util\n   function EnsureNamespace(nsString)\n   {\n\n      let nsStrings = nsString.split(\".\");\n      let root = _OBJECT_ROOT_;\n      for (let i = 0; i < nsStrings.length; i++)\n      {\n         let nsName = nsStrings[i];\n         let val = root[nsName];\n         if (typeof val == \"undefined\" || !val)\n         {\n            root[nsName] = new Object(); // {} ?\n         }\n\n         root = root[nsName];\n      }\n   }\n\n   EnsureNamespace(\"UnScramble.Core\");\n\n\n   // UnScramble.Core.Dictionary\n   if (typeof _OBJECT_ROOT_.UnScramble.Core.Dictionary == \"undefined\" || !_OBJECT_ROOT_.UnScramble.Core[\"Dictionary\"])\n_OBJECT_ROOT_.UnScramble.Core.Dictionary = (function()\n   {\n\n//    with (UnScramble.Core)\n//    {\n         var _Dictionary = function(lang)\n         {\n            if (lang == \"French\")\n            {\n               this.IndexedAlphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";  \n               this.MaxWordLength = 28;\n               this.DAWGReader = new BinFileReader(\"datafiles/DAWG_ODS5_French.dat\");\n               this.DAWGReader.movePointerTo(0);\n            } else\n            {\n               this.IndexedAlphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";  \n               this.MaxWordLength = 28;\n               this.DAWGReader = new BinFileReader(\"datafiles/DAWG_SOWPODS_English.dat\");\n               this.DAWGReader.movePointerTo(0);\n            }\n         }\n\n\n         _Dictionary.prototype.LETTER_BIT_SHIFT = 25;\n         _Dictionary.prototype.LETTER_BIT_MASK = 1040187392;\n         _Dictionary.prototype.CHILD_INDEX_BIT_MASK = 33554431;\n         _Dictionary.prototype.END_OF_WORD_BIT_MASK = 2147483648;\n         _Dictionary.prototype.END_OF_LIST_BIT_MASK = 1073741824;\n\n         _Dictionary.prototype.DAWGReader = 0;\n         _Dictionary.prototype.IndexedAlphabet = \"\";\n         _Dictionary.prototype.MaxWordLength = 0;\n\n         var DAWG_OFFSET = 4; //4 bytes initial data at top of file, stores the number of nodes in the DAWG\n\n         _Dictionary.prototype.DAWG_Letter = function(dataIndex)\n         {\n            let byteOffset = 4 * dataIndex + DAWG_OFFSET;\n            this.DAWGReader.movePointerTo(byteOffset);\n\n            let alphabetPos = ((this.DAWGReader.readNumber(4) & this.LETTER_BIT_MASK) >> this.LETTER_BIT_SHIFT);\n            let letter = this.IndexedAlphabet.substring(alphabetPos, alphabetPos+1);\n            return letter;\n         }\n         _Dictionary.prototype.DAWG_IsEndOfWord = function(dataIndex)\n         {\n            let byteOffset = 4 * dataIndex + DAWG_OFFSET;\n            this.DAWGReader.movePointerTo(byteOffset);\n\n            let val = (this.DAWGReader.readNumber(4) & this.END_OF_WORD_BIT_MASK);\n            return val == 0 ? false : true;\n         }\n_Dictionary.prototype.DAWG_NextIndex = function(dataIndex)\n         {\n            let byteOffset = 4 * dataIndex + DAWG_OFFSET;\n            this.DAWGReader.movePointerTo(byteOffset);\n\n            let val = (this.DAWGReader.readNumber(4) & this.END_OF_LIST_BIT_MASK);\n            return val == 0 ? (dataIndex + 1) : 0;\n         }\n         _Dictionary.prototype.DAWG_ChildIndex = function(dataIndex)\n         {\n            let byteOffset = 4 * dataIndex + DAWG_OFFSET;\n            this.DAWGReader.movePointerTo(byteOffset);\n\n            let val = (this.DAWGReader.readNumber(4) & this.CHILD_INDEX_BIT_MASK);\n            return val;\n         }\n\n         _Dictionary.prototype.CheckDictionaryRecursive = function(theWord, string_index, dawg_index) //dawg_index is NOT zero-based (start with 1)\n         {\n            let ch = theWord[string_index];\n            let letter = this.DAWG_Letter(dawg_index);\n            if (letter == ch)\n            {\n               if (string_index == (theWord.length - 1))\n               {\n                  if (this.DAWG_IsEndOfWord(dawg_index))\n                     return true;\n                  else\n                     return false;\n               }\n               else\n               {\n                  let childIndex = this.DAWG_ChildIndex(dawg_index);\n                  if (childIndex > 0)\n                     return this.CheckDictionaryRecursive(theWord, string_index+1, childIndex);\n                  else\n                     return false;\n               }\n            }\n            else\n            {\n               let nextIndex = this.DAWG_NextIndex(dawg_index);\n               if (nextIndex > 0)\n                  return this.CheckDictionaryRecursive(theWord, string_index, nextIndex);\n               else\n                  return false;\n            }\n         }\n\n         _Dictionary.prototype.CheckWord = function(theWord)\n         {\n            theWord = theWord.toUpperCase();\n            return this.CheckDictionaryRecursive(theWord, 0, 1); //dawg_index is NOT zero-based (start with 1)\n         }\n\n         let currentString = [];\n         let sortedChars = [];\n\n         _Dictionary.prototype.FindAnagramsRecursive = function(dawg_index, string_index) //dawg_index is NOT zero-based (start with 1)\n         {\n            let retArray = [];\n\n            let previousChar = 0;\n            let tempIndex = this.DAWG_ChildIndex(dawg_index);\n            let string = \"\";\n\n            currentString[string_index] = this.DAWG_Letter(dawg_index);\n\n            if (this.DAWG_IsEndOfWord(dawg_index))\n            {\n               for (let i = 0; i <= string_index; i++)\n               {\n                  string += currentString[i];\n               }\n\n               retArray.push(string);\n            }\n\n            if ((sortedChars.length > 0) && (tempIndex > 0))\n            {\n               for (let i = 0; i < sortedChars.length; i++)\n               {\n                  string += sortedChars[i];\n               }\n\n               for (let i = 0; i < sortedChars.length; i++)\n               {\n                  var currentChar = sortedChars[i];\n                  if (currentChar == previousChar) continue;\n\n                  do\n                  {\n                     let tempLetter = this.DAWG_Letter(tempIndex);\n                     if (currentChar == tempLetter)\n                     {\n                        sortedChars.splice(i, 1);\n                        let retAr = this.FindAnagramsRecursive(tempIndex, string_index + 1);\n                        retArray = retArray.concat(retAr);\n                        sortedChars.splice(i, 0, currentChar);\n\n                        tempIndex = this.DAWG_NextIndex(tempIndex);\n                        break;\n                     }\n                     else\n                     {\n                        let alphabetPos1 = this.IndexedAlphabet.indexOf(currentChar);\n                        let alphabetPos2 = this.IndexedAlphabet.indexOf(tempLetter);\n\n                        if (alphabetPos1 < alphabetPos2) break;\n                     }\n\n                     tempIndex = this.DAWG_NextIndex(tempIndex);\n\n                  } while (tempIndex > 0);\n\n                  if (tempIndex <= 0) break;\n\n                  previousChar = currentChar;\n               }\n            }\n\n            return retArray;\n         }\n\n         _Dictionary.prototype.FindWildChar = function(theChars)\n         {\n             var n = theChars.indexOf(\"?\");\n         }\n\n\n         _Dictionary.prototype.FindAnagrams = function(theChars)\n         {\n            theChars = theChars.toUpperCase();\n\n            // RESET currentString\n            for (let i = 0; i < currentString.length; i++)\n            {\n               //delete callbacks[i];\n               currentString.splice(i--, 1);\n            }\n            for (let i = 0; i < this.MaxWordLength; i++)\n            {\n               currentString.push(i + \"\");\n            }\n\n            // RESET sortedChars\n            for (let i = 0; i < sortedChars.length; i++)\n            {\n               //delete callbacks[i];\n               sortedChars.splice(i--, 1);\n            }\n            for (let i = 0; i < theChars.length; i++)\n            {\n               let aChar = theChars[i];\n               if (this.IndexedAlphabet.indexOf(aChar) >= 0)\n               {\n                  sortedChars.push(aChar);\n               }\n            }\n            sortedChars.sort();\n\n            let string = \"\";\n            for (let i = 0; i < sortedChars.length; i++)\n            {\n               string += sortedChars[i];\n            }\n\n            if (sortedChars.length < 2)\n            {\n               return [string];\n            }\n\n            let anagrams = [];\n            let charBank = [];\n\n            for (let i = 0; i < sortedChars.length; i++)\n            {\n               charBank.push(sortedChars[i]);\n            }\n\n            var previousChar = 0;\n\n            for (let i = 0; i < charBank.length; i++)\n            {\n               let currentChar = charBank[i];\n\n               if (currentChar == previousChar)\n               {\n                  continue;\n               }\n\n               sortedChars.splice(i, 1);\n\n               let dawg_index = this.IndexedAlphabet.indexOf(currentChar) + 1; //dawg_index is NOT zero-based (start with 1)\n\n               let retAr = this.FindAnagramsRecursive(dawg_index, 0, sortedChars.length);\n               anagrams = anagrams.concat(retAr);\n\n               sortedChars.splice(i, 0, currentChar);\n\n               previousChar = currentChar;\n            }\n\n            return anagrams;\n         }\n\n//    } // END - with (UnScramble.Core)\n\n      return _Dictionary;\n   })();\n   // END UnScramble.Core.Dictionary\n\n})();\n// END script-scope\n\n\n\nwindow_onload = function()\n{\n\n   //with (UnScramble)\n   //{\n      // jslint empty block statement\n\n   //}\n\n};\n\n"],"names":["BinFileReader","fileURL","_exception","FileLoadFailed","EOFReached","filePointer","fileSize","fileContents","getFileSize","getFilePointer","movePointerTo","iTo","throwException","movePointer","iDirection","readNumber","iNumBytes","iFrom","result","i","readByteAt","readString","iNumChars","tmpTo","String","fromCharCode","readUnicodeString","errorCode","reason","alert","Error","BinFileReaderImpl_IE","vbArr","BinFileReaderImpl_IE_VBAjaxLoader","toArray","length","BinFileReaderImpl","req","XMLHttpRequest","open","overrideMimeType","send","status","responseText","charCodeAt","test","navigator","userAgent","apply","document","write","_OBJECT_ROOT_","window","EnsureNamespace","nsString","nsStrings","split","root","nsName","val","Object","UnScramble","Core","Dictionary","_Dictionary","lang","IndexedAlphabet","MaxWordLength","DAWGReader","prototype","LETTER_BIT_SHIFT","LETTER_BIT_MASK","CHILD_INDEX_BIT_MASK","END_OF_WORD_BIT_MASK","END_OF_LIST_BIT_MASK","DAWG_OFFSET","DAWG_Letter","dataIndex","byteOffset","alphabetPos","letter","substring","DAWG_IsEndOfWord","DAWG_NextIndex","DAWG_ChildIndex","CheckDictionaryRecursive","theWord","string_index","dawg_index","ch","childIndex","nextIndex","CheckWord","toUpperCase","currentString","sortedChars","FindAnagramsRecursive","retArray","previousChar","tempIndex","string","push","currentChar","tempLetter","splice","retAr","concat","alphabetPos1","indexOf","alphabetPos2","FindWildChar","theChars","n","FindAnagrams","aChar","sort","anagrams","charBank","window_onload"],"sourceRoot":""}